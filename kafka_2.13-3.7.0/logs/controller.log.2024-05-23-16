[2024-05-23 16:03:08,770] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-23 16:03:08,771] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-23 16:03:08,771] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:03:08,771] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:03:08,771] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:03:08,771] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:03:08,771] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:03:08,771] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:08:08,771] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-23 16:08:08,771] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-23 16:08:08,772] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:08:08,772] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:08:08,772] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:08:08,772] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:08:08,772] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:08:08,772] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:13:08,772] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-23 16:13:08,772] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-23 16:13:08,773] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:13:08,773] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:13:08,773] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:13:08,773] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:13:08,773] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:13:08,773] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:18:08,773] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-23 16:18:08,773] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-23 16:18:08,773] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:18:08,773] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:18:08,773] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:18:08,773] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:18:08,773] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:18:08,773] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:20:58,692] INFO [Controller id=101] New topics: [Set(__transaction_state)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__transaction_state,Some(gG5Q61jwR0iRXB5edMY1_w),HashMap(__transaction_state-42 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-7 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-13 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-0 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-37 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-6 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-32 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-18 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-40 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-31 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-45 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-15 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-12 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-46 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-48 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-49 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-28 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-2 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-20 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-24 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-3 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-21 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-29 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-39 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-38 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-14 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-10 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-44 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-9 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-22 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-43 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-4 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-30 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-33 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-25 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-17 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-23 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-47 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-26 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-36 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-5 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-8 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-16 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-11 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-19 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-27 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), __transaction_state-41 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), __transaction_state-1 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-34 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), __transaction_state-35 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-05-23 16:20:58,692] INFO [Controller id=101] New partition creation callback for __transaction_state-42,__transaction_state-7,__transaction_state-13,__transaction_state-0,__transaction_state-37,__transaction_state-6,__transaction_state-32,__transaction_state-18,__transaction_state-40,__transaction_state-31,__transaction_state-45,__transaction_state-15,__transaction_state-12,__transaction_state-46,__transaction_state-48,__transaction_state-49,__transaction_state-28,__transaction_state-2,__transaction_state-20,__transaction_state-24,__transaction_state-3,__transaction_state-21,__transaction_state-29,__transaction_state-39,__transaction_state-38,__transaction_state-14,__transaction_state-10,__transaction_state-44,__transaction_state-9,__transaction_state-22,__transaction_state-43,__transaction_state-4,__transaction_state-30,__transaction_state-33,__transaction_state-25,__transaction_state-17,__transaction_state-23,__transaction_state-47,__transaction_state-26,__transaction_state-36,__transaction_state-5,__transaction_state-8,__transaction_state-16,__transaction_state-11,__transaction_state-19,__transaction_state-27,__transaction_state-41,__transaction_state-1,__transaction_state-34,__transaction_state-35 (kafka.controller.KafkaController)
[2024-05-23 16:20:58,715] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-23 16:20:58,715] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-23 16:20:58,716] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-23 16:21:21,688] DEBUG [Controller id=101] Delete topics listener fired for topics topic1 to be deleted (kafka.controller.KafkaController)
[2024-05-23 16:21:21,688] INFO [Controller id=101] Starting topic deletion for topics topic1 (kafka.controller.KafkaController)
[2024-05-23 16:21:21,689] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-05-23 16:21:21,689] INFO [Topic Deletion Manager 101] Deletion of topic topic1 (re)started (kafka.controller.TopicDeletionManager)
[2024-05-23 16:21:21,728] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 101: request error = NONE, partition errors = Map(topic1-1 -> NONE, topic1-0 -> NONE, topic1-2 -> NONE) (kafka.controller.KafkaController)
[2024-05-23 16:21:21,728] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=1,Replica=101],[Topic=topic1,Partition=0,Replica=101],[Topic=topic1,Partition=2,Replica=101] (kafka.controller.TopicDeletionManager)
[2024-05-23 16:21:21,728] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-05-23 16:21:21,730] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 102: request error = NONE, partition errors = Map(topic1-1 -> NONE, topic1-0 -> NONE, topic1-2 -> NONE) (kafka.controller.KafkaController)
[2024-05-23 16:21:21,730] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=1,Replica=102],[Topic=topic1,Partition=0,Replica=102],[Topic=topic1,Partition=2,Replica=102] (kafka.controller.TopicDeletionManager)
[2024-05-23 16:21:21,730] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-05-23 16:21:21,730] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 103: request error = NONE, partition errors = Map(topic1-1 -> NONE, topic1-0 -> NONE, topic1-2 -> NONE) (kafka.controller.KafkaController)
[2024-05-23 16:21:21,730] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=1,Replica=103],[Topic=topic1,Partition=0,Replica=103],[Topic=topic1,Partition=2,Replica=103] (kafka.controller.TopicDeletionManager)
[2024-05-23 16:21:21,730] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-05-23 16:21:21,738] INFO [Topic Deletion Manager 101] Deletion of topic topic1 successfully completed (kafka.controller.TopicDeletionManager)
[2024-05-23 16:21:21,738] INFO [Controller id=101] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-05-23 16:21:21,738] DEBUG [Controller id=101] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-05-23 16:21:29,135] INFO [Controller id=101] New topics: [Set(topic1)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic1,Some(YY8r6gVOS1uMj3AaczJmvQ),Map(topic1-0 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-05-23 16:21:29,135] INFO [Controller id=101] New partition creation callback for topic1-0 (kafka.controller.KafkaController)
[2024-05-23 16:23:08,774] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-23 16:23:08,774] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-23 16:23:08,775] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:23:08,776] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:23:08,776] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:23:08,776] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:23:08,776] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:23:08,776] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:24:43,782] DEBUG [Controller id=101] Delete topics listener fired for topics topic1 to be deleted (kafka.controller.KafkaController)
[2024-05-23 16:24:43,782] INFO [Controller id=101] Starting topic deletion for topics topic1 (kafka.controller.KafkaController)
[2024-05-23 16:24:43,782] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-05-23 16:24:43,782] INFO [Topic Deletion Manager 101] Deletion of topic topic1 (re)started (kafka.controller.TopicDeletionManager)
[2024-05-23 16:24:43,802] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 102: request error = NONE, partition errors = Map(topic1-0 -> NONE) (kafka.controller.KafkaController)
[2024-05-23 16:24:43,802] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=0,Replica=102] (kafka.controller.TopicDeletionManager)
[2024-05-23 16:24:43,803] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-05-23 16:24:43,808] INFO [Topic Deletion Manager 101] Deletion of topic topic1 successfully completed (kafka.controller.TopicDeletionManager)
[2024-05-23 16:24:43,809] INFO [Controller id=101] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-05-23 16:24:43,809] DEBUG [Controller id=101] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-05-23 16:24:51,413] INFO [Controller id=101] New topics: [Set(topic1)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic1,Some(jO1OMejtT3iD85QuFuR9vQ),Map(topic1-0 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-05-23 16:24:51,413] INFO [Controller id=101] New partition creation callback for topic1-0 (kafka.controller.KafkaController)
[2024-05-23 16:28:08,776] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-23 16:28:08,776] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-23 16:28:08,776] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:28:08,776] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:28:08,777] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:28:08,777] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:28:08,777] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:28:08,777] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:33:08,777] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-23 16:33:08,777] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-23 16:33:08,777] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:33:08,777] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:33:08,777] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:33:08,777] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:33:08,777] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:33:08,777] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:38:08,777] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-23 16:38:08,777] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-23 16:38:08,778] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:38:08,778] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:38:08,778] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:38:08,778] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:38:08,778] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:38:08,778] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:43:08,778] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-23 16:43:08,778] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-23 16:43:08,778] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:43:08,778] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:43:08,778] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:43:08,778] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:43:08,778] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:43:08,778] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:48:08,778] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-23 16:48:08,778] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-23 16:48:08,779] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:48:08,779] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:48:08,779] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:48:08,779] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:48:08,779] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:48:08,779] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:53:08,779] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-23 16:53:08,779] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-23 16:53:08,779] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:53:08,779] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:53:08,779] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:53:08,779] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:53:08,779] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:53:08,779] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:58:08,780] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-23 16:58:08,780] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-23 16:58:08,780] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:58:08,780] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:58:08,780] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:58:08,780] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-23 16:58:08,780] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-05-23 16:58:08,780] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
