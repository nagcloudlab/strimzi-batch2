[2024-05-22 17:12:33,221] DEBUG [Controller id=102] Broker 103 was elected as controller instead of broker 102 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2024-05-22 17:15:55,508] INFO [ControllerEventThread controllerId=101] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:15:55,513] DEBUG [Controller id=101] Broker 103 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-05-22 17:16:42,210] INFO [ControllerEventThread controllerId=102] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:16:42,210] INFO [ControllerEventThread controllerId=102] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:16:42,210] INFO [ControllerEventThread controllerId=102] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:16:42,211] DEBUG [Controller id=102] Resigning (kafka.controller.KafkaController)
[2024-05-22 17:16:42,211] DEBUG [Controller id=102] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-05-22 17:16:42,211] INFO [PartitionStateMachine controllerId=102] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:16:42,211] INFO [ReplicaStateMachine controllerId=102] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:16:42,212] INFO [Controller id=102] Resigned (kafka.controller.KafkaController)
[2024-05-22 17:18:00,718] INFO [ControllerEventThread controllerId=101] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:18:00,718] INFO [ControllerEventThread controllerId=101] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:18:00,718] INFO [ControllerEventThread controllerId=101] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:18:00,718] DEBUG [Controller id=101] Resigning (kafka.controller.KafkaController)
[2024-05-22 17:18:00,718] DEBUG [Controller id=101] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-05-22 17:18:00,719] INFO [PartitionStateMachine controllerId=101] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:18:00,719] INFO [ReplicaStateMachine controllerId=101] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:18:00,719] INFO [Controller id=101] Resigned (kafka.controller.KafkaController)
[2024-05-22 17:19:52,148] INFO [ControllerEventThread controllerId=103] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:19:52,158] INFO [Controller id=103] 103 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2024-05-22 17:19:52,159] INFO [Controller id=103] Registering handlers (kafka.controller.KafkaController)
[2024-05-22 17:19:52,161] INFO [Controller id=103] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-05-22 17:19:52,162] INFO [Controller id=103] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-05-22 17:19:52,166] INFO [Controller id=103] Initializing controller context (kafka.controller.KafkaController)
[2024-05-22 17:19:52,173] INFO [Controller id=103] Initialized broker epochs cache: HashMap(103 -> 431) (kafka.controller.KafkaController)
[2024-05-22 17:19:52,179] DEBUG [Controller id=103] Register BrokerModifications handler for Set(103) (kafka.controller.KafkaController)
[2024-05-22 17:19:52,186] DEBUG [Channel manager on controller 103]: Controller 103 trying to connect to broker 103 (kafka.controller.ControllerChannelManager)
[2024-05-22 17:19:52,189] INFO [RequestSendThread controllerId=103] Starting (kafka.controller.RequestSendThread)
[2024-05-22 17:19:52,190] INFO [Controller id=103] Currently active brokers in the cluster: Set(103) (kafka.controller.KafkaController)
[2024-05-22 17:19:52,190] INFO [Controller id=103] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-05-22 17:19:52,190] INFO [Controller id=103] Current list of topics in the cluster: HashSet(topic1) (kafka.controller.KafkaController)
[2024-05-22 17:19:52,190] INFO [Controller id=103] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-05-22 17:19:52,193] INFO [Controller id=103] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-05-22 17:19:52,193] INFO [Controller id=103] List of topics ineligible for deletion: topic1 (kafka.controller.KafkaController)
[2024-05-22 17:19:52,193] INFO [Controller id=103] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-05-22 17:19:52,193] INFO [Topic Deletion Manager 103] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(topic1) (kafka.controller.TopicDeletionManager)
[2024-05-22 17:19:52,194] INFO [Controller id=103] Sending update metadata request (kafka.controller.KafkaController)
[2024-05-22 17:19:52,201] INFO [ReplicaStateMachine controllerId=103] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:19:52,203] INFO [ReplicaStateMachine controllerId=103] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:19:52,206] WARN [RequestSendThread controllerId=103] Controller 103's connection to broker localhost:9094 (id: 103 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 103 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-05-22 17:19:52,214] INFO [ReplicaStateMachine controllerId=103] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:19:52,225] DEBUG [ReplicaStateMachine controllerId=103] Started replica state machine with initial state -> HashMap([Topic=topic1,Partition=1,Replica=101] -> OfflineReplica, [Topic=topic1,Partition=1,Replica=102] -> OfflineReplica, [Topic=topic1,Partition=0,Replica=101] -> OfflineReplica, [Topic=topic1,Partition=2,Replica=101] -> OfflineReplica, [Topic=topic1,Partition=2,Replica=103] -> OnlineReplica, [Topic=topic1,Partition=1,Replica=103] -> OnlineReplica, [Topic=topic1,Partition=2,Replica=102] -> OfflineReplica, [Topic=topic1,Partition=0,Replica=103] -> OnlineReplica, [Topic=topic1,Partition=0,Replica=102] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:19:52,225] INFO [PartitionStateMachine controllerId=103] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:19:52,227] INFO [PartitionStateMachine controllerId=103] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:19:52,228] DEBUG [PartitionStateMachine controllerId=103] Started partition state machine with initial state -> HashMap(topic1-1 -> OnlinePartition, topic1-0 -> OnlinePartition, topic1-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:19:52,228] INFO [Controller id=103] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2024-05-22 17:19:52,231] INFO [Controller id=103] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-05-22 17:19:52,232] INFO [Controller id=103] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-05-22 17:19:52,232] INFO [Controller id=103] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-05-22 17:19:52,232] INFO [Controller id=103] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-05-22 17:19:52,233] INFO [Controller id=103] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-05-22 17:19:52,242] INFO [Controller id=103] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-05-22 17:19:52,309] INFO [RequestSendThread controllerId=103] Controller 103 connected to localhost:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-22 17:19:57,244] INFO [Controller id=103] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-22 17:19:57,245] TRACE [Controller id=103] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-22 17:19:57,251] DEBUG [Controller id=103] Topics not in preferred replica for broker 101 Map(topic1-2 -> List(101, 103, 102)) (kafka.controller.KafkaController)
[2024-05-22 17:19:57,254] TRACE [Controller id=103] Leader imbalance ratio for broker 101 is 1.0 (kafka.controller.KafkaController)
[2024-05-22 17:19:57,258] INFO [Controller id=103] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-05-22 17:19:57,258] DEBUG [Controller id=103] Topics not in preferred replica for broker 102 Map(topic1-1 -> List(102, 101, 103)) (kafka.controller.KafkaController)
[2024-05-22 17:19:57,258] TRACE [Controller id=103] Leader imbalance ratio for broker 102 is 1.0 (kafka.controller.KafkaController)
[2024-05-22 17:19:57,259] INFO [Controller id=103] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-05-22 17:19:57,259] DEBUG [Controller id=103] Topics not in preferred replica for broker 103 Map() (kafka.controller.KafkaController)
[2024-05-22 17:19:57,259] TRACE [Controller id=103] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-22 17:20:05,827] INFO [Controller id=103] Shutting down broker 103 (kafka.controller.KafkaController)
[2024-05-22 17:20:05,828] DEBUG [Controller id=103] All shutting down brokers: 103 (kafka.controller.KafkaController)
[2024-05-22 17:20:05,828] DEBUG [Controller id=103] Live brokers:  (kafka.controller.KafkaController)
[2024-05-22 17:20:05,834] TRACE [Controller id=103] All leaders = topic1-1 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),topic1-0 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),topic1-2 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:5,ControllerEpoch:3) (kafka.controller.KafkaController)
[2024-05-22 17:20:10,836] INFO [Controller id=103] Shutting down broker 103 (kafka.controller.KafkaController)
[2024-05-22 17:20:10,836] DEBUG [Controller id=103] All shutting down brokers: 103 (kafka.controller.KafkaController)
[2024-05-22 17:20:10,836] DEBUG [Controller id=103] Live brokers:  (kafka.controller.KafkaController)
[2024-05-22 17:20:10,838] TRACE [Controller id=103] All leaders = topic1-1 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),topic1-0 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),topic1-2 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:5,ControllerEpoch:3) (kafka.controller.KafkaController)
[2024-05-22 17:20:15,840] INFO [Controller id=103] Shutting down broker 103 (kafka.controller.KafkaController)
[2024-05-22 17:20:15,840] DEBUG [Controller id=103] All shutting down brokers: 103 (kafka.controller.KafkaController)
[2024-05-22 17:20:15,841] DEBUG [Controller id=103] Live brokers:  (kafka.controller.KafkaController)
[2024-05-22 17:20:15,847] TRACE [Controller id=103] All leaders = topic1-1 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),topic1-0 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),topic1-2 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:5,ControllerEpoch:3) (kafka.controller.KafkaController)
[2024-05-22 17:20:15,933] INFO [ControllerEventThread controllerId=103] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:20:15,934] INFO [ControllerEventThread controllerId=103] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:20:15,934] INFO [ControllerEventThread controllerId=103] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:20:15,934] DEBUG [Controller id=103] Resigning (kafka.controller.KafkaController)
[2024-05-22 17:20:15,934] DEBUG [Controller id=103] Unregister BrokerModifications handler for Set(103) (kafka.controller.KafkaController)
[2024-05-22 17:20:15,934] INFO [PartitionStateMachine controllerId=103] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:20:15,935] INFO [ReplicaStateMachine controllerId=103] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:20:15,935] INFO [RequestSendThread controllerId=103] Shutting down (kafka.controller.RequestSendThread)
[2024-05-22 17:20:15,935] INFO [RequestSendThread controllerId=103] Stopped (kafka.controller.RequestSendThread)
[2024-05-22 17:20:15,935] INFO [RequestSendThread controllerId=103] Shutdown completed (kafka.controller.RequestSendThread)
[2024-05-22 17:20:15,936] INFO [Controller id=103] Resigned (kafka.controller.KafkaController)
[2024-05-22 17:20:20,363] INFO [ControllerEventThread controllerId=102] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:20:20,371] INFO [Controller id=102] 102 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2024-05-22 17:20:20,372] INFO [Controller id=102] Registering handlers (kafka.controller.KafkaController)
[2024-05-22 17:20:20,373] INFO [Controller id=102] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-05-22 17:20:20,374] INFO [Controller id=102] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-05-22 17:20:20,378] INFO [Controller id=102] Initializing controller context (kafka.controller.KafkaController)
[2024-05-22 17:20:20,385] INFO [Controller id=102] Initialized broker epochs cache: HashMap(102 -> 450) (kafka.controller.KafkaController)
[2024-05-22 17:20:20,392] DEBUG [Controller id=102] Register BrokerModifications handler for Set(102) (kafka.controller.KafkaController)
[2024-05-22 17:20:20,398] DEBUG [Channel manager on controller 102]: Controller 102 trying to connect to broker 102 (kafka.controller.ControllerChannelManager)
[2024-05-22 17:20:20,401] INFO [RequestSendThread controllerId=102] Starting (kafka.controller.RequestSendThread)
[2024-05-22 17:20:20,402] INFO [Controller id=102] Currently active brokers in the cluster: Set(102) (kafka.controller.KafkaController)
[2024-05-22 17:20:20,402] INFO [Controller id=102] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-05-22 17:20:20,402] INFO [Controller id=102] Current list of topics in the cluster: HashSet(topic1) (kafka.controller.KafkaController)
[2024-05-22 17:20:20,402] INFO [Controller id=102] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-05-22 17:20:20,404] INFO [Controller id=102] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-05-22 17:20:20,405] INFO [Controller id=102] List of topics ineligible for deletion: topic1 (kafka.controller.KafkaController)
[2024-05-22 17:20:20,405] INFO [Controller id=102] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-05-22 17:20:20,405] INFO [Topic Deletion Manager 102] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(topic1) (kafka.controller.TopicDeletionManager)
[2024-05-22 17:20:20,406] INFO [Controller id=102] Sending update metadata request (kafka.controller.KafkaController)
[2024-05-22 17:20:20,411] INFO [ReplicaStateMachine controllerId=102] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:20:20,413] INFO [ReplicaStateMachine controllerId=102] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:20:20,417] WARN [RequestSendThread controllerId=102] Controller 102's connection to broker localhost:9093 (id: 102 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 102 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-05-22 17:20:20,427] INFO [ReplicaStateMachine controllerId=102] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:20:20,444] DEBUG [ReplicaStateMachine controllerId=102] Started replica state machine with initial state -> HashMap([Topic=topic1,Partition=1,Replica=101] -> OfflineReplica, [Topic=topic1,Partition=1,Replica=102] -> OnlineReplica, [Topic=topic1,Partition=0,Replica=101] -> OfflineReplica, [Topic=topic1,Partition=2,Replica=101] -> OfflineReplica, [Topic=topic1,Partition=2,Replica=103] -> OfflineReplica, [Topic=topic1,Partition=1,Replica=103] -> OfflineReplica, [Topic=topic1,Partition=2,Replica=102] -> OnlineReplica, [Topic=topic1,Partition=0,Replica=103] -> OfflineReplica, [Topic=topic1,Partition=0,Replica=102] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:20:20,445] INFO [PartitionStateMachine controllerId=102] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:20:20,446] INFO [PartitionStateMachine controllerId=102] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:20:20,467] DEBUG [PartitionStateMachine controllerId=102] Started partition state machine with initial state -> HashMap(topic1-1 -> OfflinePartition, topic1-0 -> OfflinePartition, topic1-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:20:20,468] INFO [Controller id=102] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2024-05-22 17:20:20,471] INFO [Controller id=102] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-05-22 17:20:20,471] INFO [Controller id=102] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-05-22 17:20:20,471] INFO [Controller id=102] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-05-22 17:20:20,471] INFO [Controller id=102] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-05-22 17:20:20,472] INFO [Controller id=102] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-05-22 17:20:20,476] INFO [Controller id=102] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-05-22 17:20:20,520] INFO [RequestSendThread controllerId=102] Controller 102 connected to localhost:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-22 17:20:25,477] INFO [Controller id=102] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-22 17:20:25,478] TRACE [Controller id=102] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-22 17:20:25,481] DEBUG [Controller id=102] Topics not in preferred replica for broker 101 Map(topic1-2 -> List(101, 103, 102)) (kafka.controller.KafkaController)
[2024-05-22 17:20:25,483] TRACE [Controller id=102] Leader imbalance ratio for broker 101 is 1.0 (kafka.controller.KafkaController)
[2024-05-22 17:20:25,484] INFO [Controller id=102] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-05-22 17:20:25,484] DEBUG [Controller id=102] Topics not in preferred replica for broker 102 Map(topic1-1 -> List(102, 101, 103)) (kafka.controller.KafkaController)
[2024-05-22 17:20:25,484] TRACE [Controller id=102] Leader imbalance ratio for broker 102 is 1.0 (kafka.controller.KafkaController)
[2024-05-22 17:20:25,485] INFO [Controller id=102] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-05-22 17:20:25,485] DEBUG [Controller id=102] Topics not in preferred replica for broker 103 Map(topic1-0 -> List(103, 102, 101)) (kafka.controller.KafkaController)
[2024-05-22 17:20:25,485] TRACE [Controller id=102] Leader imbalance ratio for broker 103 is 1.0 (kafka.controller.KafkaController)
[2024-05-22 17:20:25,485] INFO [Controller id=102] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-05-22 17:20:26,926] INFO [Controller id=102] Newly added brokers: 101, deleted brokers: , bounced brokers: , all live brokers: 101,102 (kafka.controller.KafkaController)
[2024-05-22 17:20:26,926] DEBUG [Channel manager on controller 102]: Controller 102 trying to connect to broker 101 (kafka.controller.ControllerChannelManager)
[2024-05-22 17:20:26,927] INFO [RequestSendThread controllerId=102] Starting (kafka.controller.RequestSendThread)
[2024-05-22 17:20:26,928] INFO [Controller id=102] New broker startup callback for 101 (kafka.controller.KafkaController)
[2024-05-22 17:20:26,929] WARN [RequestSendThread controllerId=102] Controller 102's connection to broker localhost:9092 (id: 101 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 101 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-05-22 17:20:26,933] DEBUG [Controller id=102] Register BrokerModifications handler for List(101) (kafka.controller.KafkaController)
[2024-05-22 17:20:26,934] INFO [Controller id=102] Updated broker epochs cache: HashMap(101 -> 471, 102 -> 450) (kafka.controller.KafkaController)
[2024-05-22 17:20:26,944] INFO [ControllerEventThread controllerId=101] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:20:26,949] DEBUG [Controller id=101] Broker 102 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-05-22 17:20:27,030] INFO [RequestSendThread controllerId=102] Controller 102 connected to localhost:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-22 17:21:54,735] INFO [Controller id=102] Newly added brokers: 103, deleted brokers: , bounced brokers: , all live brokers: 101,102,103 (kafka.controller.KafkaController)
[2024-05-22 17:21:54,736] DEBUG [Channel manager on controller 102]: Controller 102 trying to connect to broker 103 (kafka.controller.ControllerChannelManager)
[2024-05-22 17:21:54,737] INFO [RequestSendThread controllerId=102] Starting (kafka.controller.RequestSendThread)
[2024-05-22 17:21:54,737] INFO [Controller id=102] New broker startup callback for 103 (kafka.controller.KafkaController)
[2024-05-22 17:21:54,738] WARN [RequestSendThread controllerId=102] Controller 102's connection to broker localhost:9094 (id: 103 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 103 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-05-22 17:21:54,746] DEBUG [Controller id=102] Register BrokerModifications handler for List(103) (kafka.controller.KafkaController)
[2024-05-22 17:21:54,747] INFO [Controller id=102] Updated broker epochs cache: HashMap(101 -> 471, 102 -> 450, 103 -> 487) (kafka.controller.KafkaController)
[2024-05-22 17:21:54,757] INFO [ControllerEventThread controllerId=103] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:21:54,764] DEBUG [Controller id=103] Broker 102 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-05-22 17:21:54,839] INFO [RequestSendThread controllerId=102] Controller 102 connected to localhost:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-22 17:21:55,795] DEBUG [Controller id=102] Updating ISRs for partitions: Set(topic1-0, topic1-2). (kafka.controller.KafkaController)
[2024-05-22 17:21:55,805] DEBUG [Controller id=102] ISR for partition topic1-0 updated to LeaderAndIsr(leader=103, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=103, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-05-22 17:21:55,805] DEBUG [Controller id=102] ISR for partition topic1-2 updated to LeaderAndIsr(leader=103, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=103, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8). (kafka.controller.KafkaController)
[2024-05-22 17:21:55,819] DEBUG [Controller id=102] Updating ISRs for partitions: Set(topic1-1). (kafka.controller.KafkaController)
[2024-05-22 17:21:55,821] DEBUG [Controller id=102] ISR for partition topic1-1 updated to LeaderAndIsr(leader=103, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=103, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-05-22 17:21:55,824] DEBUG [Controller id=102] Updating ISRs for partitions: Set(topic1-0, topic1-2). (kafka.controller.KafkaController)
[2024-05-22 17:21:55,825] DEBUG [Controller id=102] ISR for partition topic1-0 updated to LeaderAndIsr(leader=103, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=103, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8). (kafka.controller.KafkaController)
[2024-05-22 17:21:55,825] DEBUG [Controller id=102] ISR for partition topic1-2 updated to LeaderAndIsr(leader=103, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=103, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=9). (kafka.controller.KafkaController)
[2024-05-22 17:21:56,234] DEBUG [Controller id=102] Updating ISRs for partitions: Set(topic1-1). (kafka.controller.KafkaController)
[2024-05-22 17:21:56,236] DEBUG [Controller id=102] ISR for partition topic1-1 updated to LeaderAndIsr(leader=103, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=103, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8). (kafka.controller.KafkaController)
[2024-05-22 17:22:10,262] INFO [Controller id=102] Shutting down broker 103 (kafka.controller.KafkaController)
[2024-05-22 17:22:10,262] DEBUG [Controller id=102] All shutting down brokers: 103 (kafka.controller.KafkaController)
[2024-05-22 17:22:10,262] DEBUG [Controller id=102] Live brokers: 101,102 (kafka.controller.KafkaController)
[2024-05-22 17:22:10,279] TRACE [Controller id=102] All leaders = topic1-1 -> (Leader:102,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:9,ControllerEpoch:4),topic1-0 -> (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:9,ControllerEpoch:4),topic1-2 -> (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:4) (kafka.controller.KafkaController)
[2024-05-22 17:22:10,287] WARN [RequestSendThread controllerId=102] Controller 102 epoch 4 fails to send request (type=LeaderAndIsRequest, controllerId=102, controllerEpoch=4, brokerEpoch=487, partitionStates=[LeaderAndIsrPartitionState(topicName='topic1', partitionIndex=1, controllerEpoch=4, leader=102, leaderEpoch=6, isr=[101, 102], partitionEpoch=9, replicas=[102, 101, 103], addingReplicas=[], removingReplicas=[], isNew=false, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='topic1', partitionIndex=0, controllerEpoch=4, leader=102, leaderEpoch=6, isr=[102, 101], partitionEpoch=9, replicas=[103, 102, 101], addingReplicas=[], removingReplicas=[], isNew=false, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='topic1', partitionIndex=2, controllerEpoch=4, leader=101, leaderEpoch=7, isr=[101, 102], partitionEpoch=10, replicas=[101, 103, 102], addingReplicas=[], removingReplicas=[], isNew=false, leaderRecoveryState=0)], topicIds={topic1=3FJG66WbRtuLJvoJ69Ijiw}, liveLeaders=(localhost:9092 (id: 101 rack: null), localhost:9093 (id: 102 rack: null))) to broker localhost:9094 (id: 103 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 103 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:258)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-05-22 17:22:10,342] INFO [ControllerEventThread controllerId=103] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:22:10,342] INFO [ControllerEventThread controllerId=103] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:22:10,342] INFO [ControllerEventThread controllerId=103] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:22:10,342] DEBUG [Controller id=103] Resigning (kafka.controller.KafkaController)
[2024-05-22 17:22:10,343] DEBUG [Controller id=103] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-05-22 17:22:10,343] INFO [PartitionStateMachine controllerId=103] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:22:10,343] INFO [ReplicaStateMachine controllerId=103] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:22:10,344] INFO [Controller id=103] Resigned (kafka.controller.KafkaController)
[2024-05-22 17:22:10,347] INFO [Controller id=102] Newly added brokers: , deleted brokers: 103, bounced brokers: , all live brokers: 101,102 (kafka.controller.KafkaController)
[2024-05-22 17:22:10,348] INFO [RequestSendThread controllerId=102] Shutting down (kafka.controller.RequestSendThread)
[2024-05-22 17:22:10,348] ERROR [RequestSendThread controllerId=102] Controller 102 fails to send a request to broker localhost:9094 (id: 103 rack: null) (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:276)
	at org.apache.kafka.server.util.ShutdownableThread.pause(ShutdownableThread.java:117)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:239)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-05-22 17:22:10,349] INFO [RequestSendThread controllerId=102] Stopped (kafka.controller.RequestSendThread)
[2024-05-22 17:22:10,349] INFO [RequestSendThread controllerId=102] Shutdown completed (kafka.controller.RequestSendThread)
[2024-05-22 17:22:10,350] INFO [Controller id=102] Broker failure callback for 103 (kafka.controller.KafkaController)
[2024-05-22 17:22:10,350] INFO [Controller id=102] Removed 103 from list of shutting down brokers. (kafka.controller.KafkaController)
[2024-05-22 17:22:10,352] DEBUG [Controller id=102] Unregister BrokerModifications handler for List(103) (kafka.controller.KafkaController)
[2024-05-22 17:22:10,352] INFO [Controller id=102] Updated broker epochs cache: HashMap(101 -> 471, 102 -> 450) (kafka.controller.KafkaController)
[2024-05-22 17:25:25,486] INFO [Controller id=102] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-22 17:25:25,486] TRACE [Controller id=102] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-22 17:25:25,486] DEBUG [Controller id=102] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-05-22 17:25:25,486] TRACE [Controller id=102] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-22 17:25:25,486] DEBUG [Controller id=102] Topics not in preferred replica for broker 102 Map() (kafka.controller.KafkaController)
[2024-05-22 17:25:25,486] TRACE [Controller id=102] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-22 17:25:25,486] DEBUG [Controller id=102] Topics not in preferred replica for broker 103 Map(topic1-0 -> List(103, 102, 101)) (kafka.controller.KafkaController)
[2024-05-22 17:25:25,486] TRACE [Controller id=102] Leader imbalance ratio for broker 103 is 1.0 (kafka.controller.KafkaController)
[2024-05-22 17:25:25,486] INFO [Controller id=102] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-05-22 17:30:25,486] INFO [Controller id=102] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-22 17:30:25,487] TRACE [Controller id=102] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-22 17:30:25,487] DEBUG [Controller id=102] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-05-22 17:30:25,487] TRACE [Controller id=102] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-05-22 17:30:25,487] DEBUG [Controller id=102] Topics not in preferred replica for broker 102 Map() (kafka.controller.KafkaController)
[2024-05-22 17:30:25,487] TRACE [Controller id=102] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-22 17:30:25,487] DEBUG [Controller id=102] Topics not in preferred replica for broker 103 Map(topic1-0 -> List(103, 102, 101)) (kafka.controller.KafkaController)
[2024-05-22 17:30:25,487] TRACE [Controller id=102] Leader imbalance ratio for broker 103 is 1.0 (kafka.controller.KafkaController)
[2024-05-22 17:30:25,488] INFO [Controller id=102] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
