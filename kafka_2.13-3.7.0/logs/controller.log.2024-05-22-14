[2024-05-22 17:12:33,219] INFO [Controller id=103] 103 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2024-05-22 17:12:33,220] INFO [Controller id=103] Registering handlers (kafka.controller.KafkaController)
[2024-05-22 17:12:33,221] INFO [Controller id=103] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-05-22 17:12:33,222] INFO [Controller id=103] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-05-22 17:12:33,223] INFO [Controller id=103] Initializing controller context (kafka.controller.KafkaController)
[2024-05-22 17:12:33,225] INFO [Controller id=103] Initialized broker epochs cache: HashMap(102 -> 45, 103 -> 77) (kafka.controller.KafkaController)
[2024-05-22 17:12:33,233] DEBUG [Controller id=103] Register BrokerModifications handler for Set(102, 103) (kafka.controller.KafkaController)
[2024-05-22 17:12:33,237] DEBUG [Channel manager on controller 103]: Controller 103 trying to connect to broker 103 (kafka.controller.ControllerChannelManager)
[2024-05-22 17:12:33,239] DEBUG [Channel manager on controller 103]: Controller 103 trying to connect to broker 102 (kafka.controller.ControllerChannelManager)
[2024-05-22 17:12:33,240] INFO [RequestSendThread controllerId=103] Starting (kafka.controller.RequestSendThread)
[2024-05-22 17:12:33,240] INFO [RequestSendThread controllerId=103] Starting (kafka.controller.RequestSendThread)
[2024-05-22 17:12:33,241] INFO [Controller id=103] Currently active brokers in the cluster: Set(102, 103) (kafka.controller.KafkaController)
[2024-05-22 17:12:33,241] INFO [Controller id=103] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-05-22 17:12:33,241] INFO [Controller id=103] Current list of topics in the cluster: HashSet(topic1) (kafka.controller.KafkaController)
[2024-05-22 17:12:33,241] INFO [Controller id=103] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-05-22 17:12:33,243] INFO [Controller id=103] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-05-22 17:12:33,243] INFO [Controller id=103] List of topics ineligible for deletion: topic1 (kafka.controller.KafkaController)
[2024-05-22 17:12:33,243] INFO [Controller id=103] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-05-22 17:12:33,243] INFO [Topic Deletion Manager 103] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(topic1) (kafka.controller.TopicDeletionManager)
[2024-05-22 17:12:33,243] INFO [Controller id=103] Sending update metadata request (kafka.controller.KafkaController)
[2024-05-22 17:12:33,247] INFO [RequestSendThread controllerId=103] Controller 103 connected to localhost:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-22 17:12:33,247] INFO [RequestSendThread controllerId=103] Controller 103 connected to localhost:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-22 17:12:33,247] INFO [ReplicaStateMachine controllerId=103] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:12:33,249] INFO [ReplicaStateMachine controllerId=103] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:12:33,257] INFO [ReplicaStateMachine controllerId=103] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:12:33,262] DEBUG [ReplicaStateMachine controllerId=103] Started replica state machine with initial state -> HashMap([Topic=topic1,Partition=1,Replica=101] -> OfflineReplica, [Topic=topic1,Partition=1,Replica=102] -> OnlineReplica, [Topic=topic1,Partition=0,Replica=101] -> OfflineReplica, [Topic=topic1,Partition=2,Replica=101] -> OfflineReplica, [Topic=topic1,Partition=2,Replica=103] -> OnlineReplica, [Topic=topic1,Partition=1,Replica=103] -> OnlineReplica, [Topic=topic1,Partition=2,Replica=102] -> OnlineReplica, [Topic=topic1,Partition=0,Replica=103] -> OnlineReplica, [Topic=topic1,Partition=0,Replica=102] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:12:33,262] INFO [PartitionStateMachine controllerId=103] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:12:33,264] INFO [PartitionStateMachine controllerId=103] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:12:33,264] DEBUG [PartitionStateMachine controllerId=103] Started partition state machine with initial state -> HashMap(topic1-1 -> OnlinePartition, topic1-0 -> OnlinePartition, topic1-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:12:33,264] INFO [Controller id=103] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2024-05-22 17:12:33,266] INFO [Controller id=103] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-05-22 17:12:33,266] INFO [Controller id=103] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-05-22 17:12:33,266] INFO [Controller id=103] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-05-22 17:12:33,266] INFO [Controller id=103] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-05-22 17:12:33,266] INFO [Controller id=103] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-05-22 17:12:33,270] INFO [Controller id=103] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-05-22 17:12:38,271] INFO [Controller id=103] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-22 17:12:38,272] TRACE [Controller id=103] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-22 17:12:38,277] DEBUG [Controller id=103] Topics not in preferred replica for broker 101 Map(topic1-2 -> List(101, 103, 102)) (kafka.controller.KafkaController)
[2024-05-22 17:12:38,280] TRACE [Controller id=103] Leader imbalance ratio for broker 101 is 1.0 (kafka.controller.KafkaController)
[2024-05-22 17:12:38,283] INFO [Controller id=103] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-05-22 17:12:38,283] DEBUG [Controller id=103] Topics not in preferred replica for broker 102 Map() (kafka.controller.KafkaController)
[2024-05-22 17:12:38,283] TRACE [Controller id=103] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-05-22 17:12:38,283] DEBUG [Controller id=103] Topics not in preferred replica for broker 103 Map() (kafka.controller.KafkaController)
[2024-05-22 17:12:38,283] TRACE [Controller id=103] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-22 17:15:55,490] INFO [Controller id=103] Newly added brokers: 101, deleted brokers: , bounced brokers: , all live brokers: 101,102,103 (kafka.controller.KafkaController)
[2024-05-22 17:15:55,490] DEBUG [Channel manager on controller 103]: Controller 103 trying to connect to broker 101 (kafka.controller.ControllerChannelManager)
[2024-05-22 17:15:55,491] INFO [RequestSendThread controllerId=103] Starting (kafka.controller.RequestSendThread)
[2024-05-22 17:15:55,492] INFO [Controller id=103] New broker startup callback for 101 (kafka.controller.KafkaController)
[2024-05-22 17:15:55,494] DEBUG [Controller id=103] Register BrokerModifications handler for List(101) (kafka.controller.KafkaController)
[2024-05-22 17:15:55,494] WARN [RequestSendThread controllerId=103] Controller 103's connection to broker localhost:9092 (id: 101 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 101 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-05-22 17:15:55,494] INFO [Controller id=103] Updated broker epochs cache: HashMap(101 -> 402, 102 -> 45, 103 -> 77) (kafka.controller.KafkaController)
[2024-05-22 17:15:55,596] INFO [RequestSendThread controllerId=103] Controller 103 connected to localhost:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-22 17:15:55,700] DEBUG [Controller id=103] Updating ISRs for partitions: Set(topic1-0). (kafka.controller.KafkaController)
[2024-05-22 17:15:55,704] DEBUG [Controller id=103] ISR for partition topic1-0 updated to LeaderAndIsr(leader=103, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=103, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-05-22 17:15:55,711] DEBUG [Controller id=103] Updating ISRs for partitions: Set(topic1-2). (kafka.controller.KafkaController)
[2024-05-22 17:15:55,713] DEBUG [Controller id=103] ISR for partition topic1-2 updated to LeaderAndIsr(leader=103, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=103, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-05-22 17:15:55,714] DEBUG [Controller id=103] Updating ISRs for partitions: Set(topic1-1). (kafka.controller.KafkaController)
[2024-05-22 17:15:55,716] DEBUG [Controller id=103] ISR for partition topic1-1 updated to LeaderAndIsr(leader=102, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=103, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-05-22 17:16:42,138] INFO [Controller id=103] Shutting down broker 102 (kafka.controller.KafkaController)
[2024-05-22 17:16:42,138] DEBUG [Controller id=103] All shutting down brokers: 102 (kafka.controller.KafkaController)
[2024-05-22 17:16:42,139] DEBUG [Controller id=103] Live brokers: 101,103 (kafka.controller.KafkaController)
[2024-05-22 17:16:42,166] TRACE [Controller id=103] All leaders = topic1-1 -> (Leader:101,ISR:103,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:2),topic1-0 -> (Leader:103,ISR:103,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:2),topic1-2 -> (Leader:103,ISR:103,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:2) (kafka.controller.KafkaController)
[2024-05-22 17:16:42,215] INFO [Controller id=103] Newly added brokers: , deleted brokers: 102, bounced brokers: , all live brokers: 101,103 (kafka.controller.KafkaController)
[2024-05-22 17:16:42,215] INFO [RequestSendThread controllerId=103] Shutting down (kafka.controller.RequestSendThread)
[2024-05-22 17:16:42,215] INFO [RequestSendThread controllerId=103] Shutdown completed (kafka.controller.RequestSendThread)
[2024-05-22 17:16:42,215] INFO [RequestSendThread controllerId=103] Stopped (kafka.controller.RequestSendThread)
[2024-05-22 17:16:42,216] INFO [Controller id=103] Broker failure callback for 102 (kafka.controller.KafkaController)
[2024-05-22 17:16:42,216] INFO [Controller id=103] Removed 102 from list of shutting down brokers. (kafka.controller.KafkaController)
[2024-05-22 17:16:42,218] DEBUG [Controller id=103] Unregister BrokerModifications handler for List(102) (kafka.controller.KafkaController)
[2024-05-22 17:16:42,218] INFO [Controller id=103] Updated broker epochs cache: HashMap(101 -> 402, 103 -> 77) (kafka.controller.KafkaController)
[2024-05-22 17:17:38,284] INFO [Controller id=103] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-22 17:17:38,284] TRACE [Controller id=103] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-22 17:17:38,284] DEBUG [Controller id=103] Topics not in preferred replica for broker 101 Map(topic1-2 -> List(101, 103, 102)) (kafka.controller.KafkaController)
[2024-05-22 17:17:38,285] TRACE [Controller id=103] Leader imbalance ratio for broker 101 is 1.0 (kafka.controller.KafkaController)
[2024-05-22 17:17:38,285] INFO [Controller id=103] Starting replica leader election (PREFERRED) for partitions topic1-2 triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-05-22 17:17:38,304] INFO [Controller id=103] Partition topic1-2 completed preferred replica leader election. New leader is 101 (kafka.controller.KafkaController)
[2024-05-22 17:17:38,304] DEBUG [Controller id=103] Topics not in preferred replica for broker 102 Map(topic1-1 -> List(102, 101, 103)) (kafka.controller.KafkaController)
[2024-05-22 17:17:38,304] TRACE [Controller id=103] Leader imbalance ratio for broker 102 is 1.0 (kafka.controller.KafkaController)
[2024-05-22 17:17:38,304] INFO [Controller id=103] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-05-22 17:17:38,304] DEBUG [Controller id=103] Topics not in preferred replica for broker 103 Map() (kafka.controller.KafkaController)
[2024-05-22 17:17:38,304] TRACE [Controller id=103] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-05-22 17:18:00,650] INFO [Controller id=103] Shutting down broker 101 (kafka.controller.KafkaController)
[2024-05-22 17:18:00,650] DEBUG [Controller id=103] All shutting down brokers: 101 (kafka.controller.KafkaController)
[2024-05-22 17:18:00,650] DEBUG [Controller id=103] Live brokers: 103 (kafka.controller.KafkaController)
[2024-05-22 17:18:00,664] TRACE [Controller id=103] All leaders = topic1-1 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:2),topic1-0 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:2),topic1-2 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:5,ControllerEpoch:2) (kafka.controller.KafkaController)
[2024-05-22 17:18:00,669] WARN [RequestSendThread controllerId=103] Controller 103 epoch 2 fails to send request (type=StopReplicaRequest, controllerId=103, controllerEpoch=2, brokerEpoch=402, deletePartitions=false, topicStates=StopReplicaTopicState(topicName='topic1', partitionStates=[StopReplicaPartitionState(partitionIndex=0, leaderEpoch=2, deletePartition=false)])) to broker localhost:9092 (id: 101 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 101 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:258)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-05-22 17:18:00,723] INFO [Controller id=103] Newly added brokers: , deleted brokers: 101, bounced brokers: , all live brokers: 103 (kafka.controller.KafkaController)
[2024-05-22 17:18:00,723] INFO [RequestSendThread controllerId=103] Shutting down (kafka.controller.RequestSendThread)
[2024-05-22 17:18:00,723] ERROR [RequestSendThread controllerId=103] Controller 103 fails to send a request to broker localhost:9092 (id: 101 rack: null) (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:276)
	at org.apache.kafka.server.util.ShutdownableThread.pause(ShutdownableThread.java:117)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:239)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:131)
[2024-05-22 17:18:00,724] INFO [RequestSendThread controllerId=103] Stopped (kafka.controller.RequestSendThread)
[2024-05-22 17:18:00,724] INFO [RequestSendThread controllerId=103] Shutdown completed (kafka.controller.RequestSendThread)
[2024-05-22 17:18:00,724] INFO [Controller id=103] Broker failure callback for 101 (kafka.controller.KafkaController)
[2024-05-22 17:18:00,724] INFO [Controller id=103] Removed 101 from list of shutting down brokers. (kafka.controller.KafkaController)
[2024-05-22 17:18:00,726] DEBUG [Controller id=103] Unregister BrokerModifications handler for List(101) (kafka.controller.KafkaController)
[2024-05-22 17:18:00,726] INFO [Controller id=103] Updated broker epochs cache: HashMap(103 -> 77) (kafka.controller.KafkaController)
[2024-05-22 17:18:57,530] INFO [Controller id=103] Shutting down broker 103 (kafka.controller.KafkaController)
[2024-05-22 17:18:57,530] DEBUG [Controller id=103] All shutting down brokers: 103 (kafka.controller.KafkaController)
[2024-05-22 17:18:57,530] DEBUG [Controller id=103] Live brokers:  (kafka.controller.KafkaController)
[2024-05-22 17:18:57,531] TRACE [Controller id=103] All leaders = topic1-1 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:2),topic1-0 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:2),topic1-2 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:5,ControllerEpoch:2) (kafka.controller.KafkaController)
[2024-05-22 17:19:02,534] INFO [Controller id=103] Shutting down broker 103 (kafka.controller.KafkaController)
[2024-05-22 17:19:02,534] DEBUG [Controller id=103] All shutting down brokers: 103 (kafka.controller.KafkaController)
[2024-05-22 17:19:02,534] DEBUG [Controller id=103] Live brokers:  (kafka.controller.KafkaController)
[2024-05-22 17:19:02,539] TRACE [Controller id=103] All leaders = topic1-1 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:2),topic1-0 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:2),topic1-2 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:5,ControllerEpoch:2) (kafka.controller.KafkaController)
[2024-05-22 17:19:07,540] INFO [Controller id=103] Shutting down broker 103 (kafka.controller.KafkaController)
[2024-05-22 17:19:07,540] DEBUG [Controller id=103] All shutting down brokers: 103 (kafka.controller.KafkaController)
[2024-05-22 17:19:07,540] DEBUG [Controller id=103] Live brokers:  (kafka.controller.KafkaController)
[2024-05-22 17:19:07,541] TRACE [Controller id=103] All leaders = topic1-1 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:2),topic1-0 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:2),topic1-2 -> (Leader:103,ISR:103,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:5,ControllerEpoch:2) (kafka.controller.KafkaController)
[2024-05-22 17:19:07,632] INFO [ControllerEventThread controllerId=103] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:19:07,633] INFO [ControllerEventThread controllerId=103] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:19:07,633] INFO [ControllerEventThread controllerId=103] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-22 17:19:07,633] DEBUG [Controller id=103] Resigning (kafka.controller.KafkaController)
[2024-05-22 17:19:07,633] DEBUG [Controller id=103] Unregister BrokerModifications handler for Set(103) (kafka.controller.KafkaController)
[2024-05-22 17:19:07,633] INFO [PartitionStateMachine controllerId=103] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-05-22 17:19:07,634] INFO [ReplicaStateMachine controllerId=103] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-05-22 17:19:07,634] INFO [RequestSendThread controllerId=103] Shutting down (kafka.controller.RequestSendThread)
[2024-05-22 17:19:07,634] INFO [RequestSendThread controllerId=103] Stopped (kafka.controller.RequestSendThread)
[2024-05-22 17:19:07,634] INFO [RequestSendThread controllerId=103] Shutdown completed (kafka.controller.RequestSendThread)
[2024-05-22 17:19:07,635] INFO [Controller id=103] Resigned (kafka.controller.KafkaController)
